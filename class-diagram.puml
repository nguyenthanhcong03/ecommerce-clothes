@startuml E-Commerce Class Diagram

!define ENTITY class
!define RELATIONSHIP -->

' Core Entities
ENTITY Category {
  - id : ObjectId
  - name : String
  - slug : String
  - parentId : ObjectId
  - description : String
  - priority : Number
  - images : Array
  --
  + create() : Category
  + update() : Category
  + delete() : Boolean
  + getById(id: ObjectId) : Category
  + getBySlug(slug: String) : Category
  + getChildren() : Category[]
  + getParent() : Category
  + getAllSubcategories() : Category[]
}

ENTITY Product {
  - id : ObjectId
  - categoryId : ObjectId
  - name : String
  - slug : String
  - description : String
  - brand : String
  - images : Array
  - tags : Array
  - averageRating : Number
  - totalReviews : Number
  - featured : Boolean
  - salesCount : Number
  --
  + create() : Product
  + update() : Product
  + delete() : Boolean
  + getById(id: ObjectId) : Product
  + getBySlug(slug: String) : Product
  + getByCategory(categoryId: ObjectId) : Product[]
  + search(query: String) : Product[]
  + updateRating() : void
  + incrementSalesCount() : void
  + setFeatured(featured: Boolean) : void
}

ENTITY User {
  - id : ObjectId
  - username : String
  - email : String
  - password : String
  - firstName : String
  - lastName : String
  - phone : String
  - avatar : String
  - gender : String
  - role : String
  - isBlocked : Boolean
  --
  + create() : User
  + update() : User
  + delete() : Boolean
  + getById(id: ObjectId) : User
  + getByEmail(email: String) : User
  + authenticate(email: String, password: String) : User
  + changePassword(newPassword: String) : Boolean
  + blockUser() : void
  + unblockUser() : void
  + updateProfile() : User
  + getFullName() : String
}

ENTITY Address {
  - id : ObjectId
  - userId : ObjectId
  - street : String
  - ward : String
  - district : String
  - province : String
  --
  + create() : Address
  + update() : Address
  + delete() : Boolean
  + getById(id: ObjectId) : Address
  + getByUserId(userId: ObjectId) : Address[]
  + getFullAddress() : String
}

ENTITY Variant {
  - id : ObjectId
  - productId : ObjectId
  - sku : String
  - size : String
  - color : String
  - price : Number
  - originalPrice : Number
  - stock : Number
  --
  + create() : Variant
  + update() : Variant
  + delete() : Boolean
  + getById(id: ObjectId) : Variant
  + getByProductId(productId: ObjectId) : Variant[]
  + updateStock(quantity: Number) : Boolean
  + decreaseStock(quantity: Number) : Boolean
  + increaseStock(quantity: Number) : Boolean
  + isInStock() : Boolean
  + getDiscountPercentage() : Number
}

ENTITY Cart {
  - id : ObjectId
  - userId : ObjectId
  --
  + create() : Cart
  + getByUserId(userId: ObjectId) : Cart
  + addItem(variantId: ObjectId, quantity: Number) : CartItem
  + removeItem(itemId: ObjectId) : Boolean
  + updateItemQuantity(itemId: ObjectId, quantity: Number) : Boolean
  + clearCart() : Boolean
  + getTotalPrice() : Number
  + getItemCount() : Number
}

ENTITY CartItem {
  - id : ObjectId
  - cartId : ObjectId
  - variantId : ObjectId
  - quantity : Number
  - name : String
  - price : Number
  - originalPrice : Number
  - color : String
  - size : String
  - image : String
  - isAvailable : Boolean
  --
  + create() : CartItem
  + update() : CartItem
  + delete() : Boolean
  + getById(id: ObjectId) : CartItem
  + getByCartId(cartId: ObjectId) : CartItem[]
  + updateQuantity(quantity: Number) : CartItem
  + getTotalPrice() : Number
  + checkAvailability() : Boolean
}

ENTITY Coupon {
  - id : ObjectId
  - code : String
  - description : String
  - discountType : String
  - discountValue : String
  - minOrderValue : Number
  - maxDiscount : Number
  - startDate : Date
  - endDate : Date
  - usageLimit : Number
  - usedCount : Number
  - isActive : Boolean
  --
  + create() : Coupon
  + update() : Coupon
  + delete() : Boolean
  + getById(id: ObjectId) : Coupon
  + getByCode(code: String) : Coupon
  + validateCoupon(orderValue: Number) : Boolean
  + calculateDiscount(orderValue: Number) : Number
  + incrementUsage() : Boolean
  + isValid() : Boolean
  + isExpired() : Boolean
}

ENTITY Order {
  - id : ObjectId
  - userId : ObjectId
  - couponId : ObjectId
  - totalPrice : Number
  - status : String
  - shippingAddress : String
  - trackingNumber : String
  - paymentMethod : String
  - isPaid : Boolean
  - paidAt : Date
  - deliveredAt : Date
  - discountAmount : Number
  - shippingFee : Number
  - note : String
  - cancelReason : String
  - cancelTime : Date
  --
  + create() : Order
  + update() : Order
  + getById(id: ObjectId) : Order
  + getByUserId(userId: ObjectId) : Order[]
  + updateStatus(status: String) : Order
  + markAsPaid() : Boolean
  + markAsDelivered() : Boolean
  + cancelOrder(reason: String) : Boolean
  + calculateTotal() : Number
  + generateTrackingNumber() : String
}

ENTITY OrderDetail {
  - id : ObjectId
  - orderId : ObjectId
  - variantId : ObjectId
  - quantity : Number
  - name : String
  - price : Number
  - originalPrice : Number
  - color : String
  - size : String
  - image : String
  --
  + create() : OrderDetail
  + getById(id: ObjectId) : OrderDetail
  + getByOrderId(orderId: ObjectId) : OrderDetail[]
  + getTotalPrice() : Number
  + getDiscountAmount() : Number
}

ENTITY Review {
  - id : ObjectId
  - userId : ObjectId
  - productId : ObjectId
  - rating : Number
  - comment : String
  - likes : Number
  - reply : String
  --
  + create() : Review
  + update() : Review
  + delete() : Boolean
  + getById(id: ObjectId) : Review
  + getByProductId(productId: ObjectId) : Review[]
  + getByUserId(userId: ObjectId) : Review[]
  + addLike() : Boolean
  + removeLike() : Boolean
  + addReply(reply: String) : Review
}

' Relationships
Category ||--o{ Category : "parent-child"
Category ||--o{ Product : "contains"
Product ||--o{ Variant : "has variants"
Product ||--o{ Review : "receives reviews"

User ||--o{ Address : "has addresses"
User ||--|| Cart : "owns"
User ||--o{ Order : "places orders"
User ||--o{ Review : "writes reviews"

Cart ||--o{ CartItem : "contains items"
CartItem }o--|| Variant : "references"

Order }o--o| Coupon : "applies coupon"
Order ||--o{ OrderDetail : "contains details"
OrderDetail }o--|| Variant : "references"

@enduml